CREATE TABLE USERS (
  userID INT NOT NULL,
  firstName VARCHAR(20) NOT NULL,
  lastName VARCHAR(20) NOT NULL,
  email VARCHAR(40) NOT NULL,
  PRIMARY KEY(userID)
);

CREATE TABLE POST (
  postID INT NOT NULL,
  pContent VARCHAR(100),
  title VARCHAR(30) NOT NULL,
  pDateTime TIMESTAMP NOT NULL,
  userID INT NOT NULL,
  PRIMARY KEY (postID),
  FOREIGN KEY (userID) REFERENCES USERS(userID) ON DELETE CASCADE
);

CREATE TABLE COMMENTS(
  commentID INT NOT NULL,
  cDateTime TIMESTAMP NOT NULL,
  cContent VARCHAR(100) NOT NULL,
  userID INT NOT NULL,
  postID INT NOT NULL,
  higherCommentID INT,
  PRIMARY KEY (commentID),
  FOREIGN KEY (userID) REFERENCES USERS(userID) ON DELETE CASCADE,
  FOREIGN KEY (postID) REFERENCES POST(postID) ON DELETE CASCADE,
  FOREIGN KEY (higherCommentID) REFERENCES COMMENTS(commentID) ON DELETE CASCADE
);

CREATE TABLE LIKES (
  userID INT NOT NULL,
  postID INT NOT NULL,
  lDateTime TIMESTAMP NOT NULL,
  PRIMARY KEY (userID, postID),
  FOREIGN KEY (userID) REFERENCES POST(userID) ON DELETE CASCADE,
  FOREIGN KEY (postID) REFERENCES POST(postID) ON DELETE CASCADE
);

CREATE TABLE IMAGES (
  imgPath VARCHAR(100) NOT NULL,
  postID INT NOT NULL,
  PRIMARY KEY (imgPath),
  FOREIGN KEY (postID) REFERENCES POST(postID) ON DELETE CASCADE
);

CREATE TABLE LINK (
  url VARCHAR(100) NOT NULL,
  postID INT NOT NULL,
  PRIMARY KEY(url),
  FOREIGN KEY (postID) REFERENCES POST(postID) ON DELETE CASCADE
);
